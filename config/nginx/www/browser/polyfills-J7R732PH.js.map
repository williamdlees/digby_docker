{"version":3,"sources":["node_modules/@angular/localize/fesm2022/localize-CajB9YLv.mjs","node_modules/@angular/localize/fesm2022/init.mjs","node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * The character used to mark the start and end of a \"block\" in a `$localize` tagged string.\n * A block can indicate metadata about the message or specify a name of a placeholder for a\n * substitution expressions.\n *\n * For example:\n *\n * ```ts\n * $localize`Hello, ${title}:title:!`;\n * $localize`:meaning|description@@id:source message text`;\n * ```\n */\nconst BLOCK_MARKER$1 = ':';\n/**\n * The marker used to separate a message's \"meaning\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:correct|Indicates that the user got the answer correct: Right!`;\n * $localize `:movement|Button label for moving to the right: Right!`;\n * ```\n */\nconst MEANING_SEPARATOR = '|';\n/**\n * The marker used to separate a message's custom \"id\" from its \"description\" in a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:A welcome message on the home page@@myApp-homepage-welcome: Welcome!`;\n * ```\n */\nconst ID_SEPARATOR = '@@';\n/**\n * The marker used to separate legacy message ids from the rest of a metadata block.\n *\n * For example:\n *\n * ```ts\n * $localize `:@@custom-id␟2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0: Welcome!`;\n * ```\n *\n * Note that this character is the \"symbol for the unit separator\" (␟) not the \"unit separator\n * character\" itself, since that has no visual representation. See https://graphemica.com/%E2%90%9F.\n *\n * Here is some background for the original \"unit separator character\":\n * https://stackoverflow.com/questions/8695118/whats-the-file-group-record-unit-separator-control-characters-and-its-usage\n */\nconst LEGACY_ID_INDICATOR = '\\u241F';\n\n/**\n * A lazily created TextEncoder instance for converting strings into UTF-8 bytes\n */\nlet textEncoder;\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n */\nfunction fingerprint(str) {\n  textEncoder ??= new TextEncoder();\n  const utf8 = textEncoder.encode(str);\n  const view = new DataView(utf8.buffer, utf8.byteOffset, utf8.byteLength);\n  let hi = hash32(view, utf8.length, 0);\n  let lo = hash32(view, utf8.length, 102072);\n  if (hi == 0 && (lo == 0 || lo == 1)) {\n    hi = hi ^ 0x130f9bef;\n    lo = lo ^ -1801410264;\n  }\n  return BigInt.asUintN(32, BigInt(hi)) << BigInt(32) | BigInt.asUintN(32, BigInt(lo));\n}\nfunction computeMsgId(msg, meaning = '') {\n  let msgFingerprint = fingerprint(msg);\n  if (meaning) {\n    // Rotate the 64-bit message fingerprint one bit to the left and then add the meaning\n    // fingerprint.\n    msgFingerprint = BigInt.asUintN(64, msgFingerprint << BigInt(1)) | msgFingerprint >> BigInt(63) & BigInt(1);\n    msgFingerprint += fingerprint(meaning);\n  }\n  return BigInt.asUintN(63, msgFingerprint).toString();\n}\nfunction hash32(view, length, c) {\n  let a = 0x9e3779b9,\n    b = 0x9e3779b9;\n  let index = 0;\n  const end = length - 12;\n  for (; index <= end; index += 12) {\n    a += view.getUint32(index, true);\n    b += view.getUint32(index + 4, true);\n    c += view.getUint32(index + 8, true);\n    const res = mix(a, b, c);\n    a = res[0], b = res[1], c = res[2];\n  }\n  const remainder = length - index;\n  // the first byte of c is reserved for the length\n  c += length;\n  if (remainder >= 4) {\n    a += view.getUint32(index, true);\n    index += 4;\n    if (remainder >= 8) {\n      b += view.getUint32(index, true);\n      index += 4;\n      // Partial 32-bit word for c\n      if (remainder >= 9) {\n        c += view.getUint8(index++) << 8;\n      }\n      if (remainder >= 10) {\n        c += view.getUint8(index++) << 16;\n      }\n      if (remainder === 11) {\n        c += view.getUint8(index++) << 24;\n      }\n    } else {\n      // Partial 32-bit word for b\n      if (remainder >= 5) {\n        b += view.getUint8(index++);\n      }\n      if (remainder >= 6) {\n        b += view.getUint8(index++) << 8;\n      }\n      if (remainder === 7) {\n        b += view.getUint8(index++) << 16;\n      }\n    }\n  } else {\n    // Partial 32-bit word for a\n    if (remainder >= 1) {\n      a += view.getUint8(index++);\n    }\n    if (remainder >= 2) {\n      a += view.getUint8(index++) << 8;\n    }\n    if (remainder === 3) {\n      a += view.getUint8(index++) << 16;\n    }\n  }\n  return mix(a, b, c)[2];\n}\nfunction mix(a, b, c) {\n  a -= b;\n  a -= c;\n  a ^= c >>> 13;\n  b -= c;\n  b -= a;\n  b ^= a << 8;\n  c -= a;\n  c -= b;\n  c ^= b >>> 13;\n  a -= b;\n  a -= c;\n  a ^= c >>> 12;\n  b -= c;\n  b -= a;\n  b ^= a << 16;\n  c -= a;\n  c -= b;\n  c ^= b >>> 5;\n  a -= b;\n  a -= c;\n  a ^= c >>> 3;\n  b -= c;\n  b -= a;\n  b ^= a << 10;\n  c -= a;\n  c -= b;\n  c ^= b >>> 15;\n  return [a, b, c];\n}\n// Utils\nvar Endian = /*#__PURE__*/function (Endian) {\n  Endian[Endian[\"Little\"] = 0] = \"Little\";\n  Endian[Endian[\"Big\"] = 1] = \"Big\";\n  return Endian;\n}(Endian || {});\n// This module specifier is intentionally a relative path to allow bundling the code directly\n// into the package.\n// @ng_package: ignore-cross-repo-import\n/**\n * Parse a `$localize` tagged string into a structure that can be used for translation or\n * extraction.\n *\n * See `ParsedMessage` for an example.\n */\nfunction parseMessage(messageParts, expressions, location, messagePartLocations, expressionLocations = []) {\n  const substitutions = {};\n  const substitutionLocations = {};\n  const associatedMessageIds = {};\n  const metadata = parseMetadata(messageParts[0], messageParts.raw[0]);\n  const cleanedMessageParts = [metadata.text];\n  const placeholderNames = [];\n  let messageString = metadata.text;\n  for (let i = 1; i < messageParts.length; i++) {\n    const {\n      messagePart,\n      placeholderName = computePlaceholderName(i),\n      associatedMessageId\n    } = parsePlaceholder(messageParts[i], messageParts.raw[i]);\n    messageString += `{$${placeholderName}}${messagePart}`;\n    if (expressions !== undefined) {\n      substitutions[placeholderName] = expressions[i - 1];\n      substitutionLocations[placeholderName] = expressionLocations[i - 1];\n    }\n    placeholderNames.push(placeholderName);\n    if (associatedMessageId !== undefined) {\n      associatedMessageIds[placeholderName] = associatedMessageId;\n    }\n    cleanedMessageParts.push(messagePart);\n  }\n  const messageId = metadata.customId || computeMsgId(messageString, metadata.meaning || '');\n  const legacyIds = metadata.legacyIds ? metadata.legacyIds.filter(id => id !== messageId) : [];\n  return {\n    id: messageId,\n    legacyIds,\n    substitutions,\n    substitutionLocations,\n    text: messageString,\n    customId: metadata.customId,\n    meaning: metadata.meaning || '',\n    description: metadata.description || '',\n    messageParts: cleanedMessageParts,\n    messagePartLocations,\n    placeholderNames,\n    associatedMessageIds,\n    location\n  };\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract the message metadata from the text.\n *\n * If the message part has a metadata block this function will extract the `meaning`,\n * `description`, `customId` and `legacyId` (if provided) from the block. These metadata properties\n * are serialized in the string delimited by `|`, `@@` and `␟` respectively.\n *\n * (Note that `␟` is the `LEGACY_ID_INDICATOR` - see `constants.ts`.)\n *\n * For example:\n *\n * ```ts\n * `:meaning|description@@custom-id:`\n * `:meaning|@@custom-id:`\n * `:meaning|description:`\n * `:description@@custom-id:`\n * `:meaning|:`\n * `:description:`\n * `:@@custom-id:`\n * `:meaning|description@@custom-id␟legacy-id-1␟legacy-id-2:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing any metadata that was parsed from the message part.\n */\nfunction parseMetadata(cooked, raw) {\n  const {\n    text: messageString,\n    block\n  } = splitBlock(cooked, raw);\n  if (block === undefined) {\n    return {\n      text: messageString\n    };\n  } else {\n    const [meaningDescAndId, ...legacyIds] = block.split(LEGACY_ID_INDICATOR);\n    const [meaningAndDesc, customId] = meaningDescAndId.split(ID_SEPARATOR, 2);\n    let [meaning, description] = meaningAndDesc.split(MEANING_SEPARATOR, 2);\n    if (description === undefined) {\n      description = meaning;\n      meaning = undefined;\n    }\n    if (description === '') {\n      description = undefined;\n    }\n    return {\n      text: messageString,\n      meaning,\n      description,\n      customId,\n      legacyIds\n    };\n  }\n}\n/**\n * Parse the given message part (`cooked` + `raw`) to extract any placeholder metadata from the\n * text.\n *\n * If the message part has a metadata block this function will extract the `placeholderName` and\n * `associatedMessageId` (if provided) from the block.\n *\n * These metadata properties are serialized in the string delimited by `@@`.\n *\n * For example:\n *\n * ```ts\n * `:placeholder-name@@associated-id:`\n * ```\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns A object containing the metadata (`placeholderName` and `associatedMessageId`) of the\n *     preceding placeholder, along with the static text that follows.\n */\nfunction parsePlaceholder(cooked, raw) {\n  const {\n    text: messagePart,\n    block\n  } = splitBlock(cooked, raw);\n  if (block === undefined) {\n    return {\n      messagePart\n    };\n  } else {\n    const [placeholderName, associatedMessageId] = block.split(ID_SEPARATOR);\n    return {\n      messagePart,\n      placeholderName,\n      associatedMessageId\n    };\n  }\n}\n/**\n * Split a message part (`cooked` + `raw`) into an optional delimited \"block\" off the front and the\n * rest of the text of the message part.\n *\n * Blocks appear at the start of message parts. They are delimited by a colon `:` character at the\n * start and end of the block.\n *\n * If the block is in the first message part then it will be metadata about the whole message:\n * meaning, description, id.  Otherwise it will be metadata about the immediately preceding\n * substitution: placeholder name.\n *\n * Since blocks are optional, it is possible that the content of a message block actually starts\n * with a block marker. In this case the marker must be escaped `\\:`.\n *\n * @param cooked The cooked version of the message part to parse.\n * @param raw The raw version of the message part to parse.\n * @returns An object containing the `text` of the message part and the text of the `block`, if it\n * exists.\n * @throws an error if the `block` is unterminated\n */\nfunction splitBlock(cooked, raw) {\n  if (raw.charAt(0) !== BLOCK_MARKER$1) {\n    return {\n      text: cooked\n    };\n  } else {\n    const endOfBlock = findEndOfBlock(cooked, raw);\n    return {\n      block: cooked.substring(1, endOfBlock),\n      text: cooked.substring(endOfBlock + 1)\n    };\n  }\n}\nfunction computePlaceholderName(index) {\n  return index === 1 ? 'PH' : `PH_${index - 1}`;\n}\n/**\n * Find the end of a \"marked block\" indicated by the first non-escaped colon.\n *\n * @param cooked The cooked string (where escaped chars have been processed)\n * @param raw The raw string (where escape sequences are still in place)\n *\n * @returns the index of the end of block marker\n * @throws an error if the block is unterminated\n */\nfunction findEndOfBlock(cooked, raw) {\n  for (let cookedIndex = 1, rawIndex = 1; cookedIndex < cooked.length; cookedIndex++, rawIndex++) {\n    if (raw[rawIndex] === '\\\\') {\n      rawIndex++;\n    } else if (cooked[cookedIndex] === BLOCK_MARKER$1) {\n      return cookedIndex;\n    }\n  }\n  throw new Error(`Unterminated $localize metadata block in \"${raw}\".`);\n}\n\n/**\n * Tag a template literal string for localization.\n *\n * For example:\n *\n * ```ts\n * $localize `some string to localize`\n * ```\n *\n * **Providing meaning, description and id**\n *\n * You can optionally specify one or more of `meaning`, `description` and `id` for a localized\n * string by pre-pending it with a colon delimited block of the form:\n *\n * ```ts\n * $localize`:meaning|description@@id:source message text`;\n *\n * $localize`:meaning|:source message text`;\n * $localize`:description:source message text`;\n * $localize`:@@id:source message text`;\n * ```\n *\n * This format is the same as that used for `i18n` markers in Angular templates. See the\n * [Angular i18n guide](guide/i18n/prepare#mark-text-in-component-template).\n *\n * **Naming placeholders**\n *\n * If the template literal string contains expressions, then the expressions will be automatically\n * associated with placeholder names for you.\n *\n * For example:\n *\n * ```ts\n * $localize `Hi ${name}! There are ${items.length} items.`;\n * ```\n *\n * will generate a message-source of `Hi {$PH}! There are {$PH_1} items`.\n *\n * The recommended practice is to name the placeholder associated with each expression though.\n *\n * Do this by providing the placeholder name wrapped in `:` characters directly after the\n * expression. These placeholder names are stripped out of the rendered localized string.\n *\n * For example, to name the `items.length` expression placeholder `itemCount` you write:\n *\n * ```ts\n * $localize `There are ${items.length}:itemCount: items`;\n * ```\n *\n * **Escaping colon markers**\n *\n * If you need to use a `:` character directly at the start of a tagged string that has no\n * metadata block, or directly after a substitution expression that has no name you must escape\n * the `:` by preceding it with a backslash:\n *\n * For example:\n *\n * ```ts\n * // message has a metadata block so no need to escape colon\n * $localize `:some description::this message starts with a colon (:)`;\n * // no metadata block so the colon must be escaped\n * $localize `\\:this message starts with a colon (:)`;\n * ```\n *\n * ```ts\n * // named substitution so no need to escape colon\n * $localize `${label}:label:: ${}`\n * // anonymous substitution so colon must be escaped\n * $localize `${label}\\: ${}`\n * ```\n *\n * **Processing localized strings:**\n *\n * There are three scenarios:\n *\n * * **compile-time inlining**: the `$localize` tag is transformed at compile time by a\n * transpiler, removing the tag and replacing the template literal string with a translated\n * literal string from a collection of translations provided to the transpilation tool.\n *\n * * **run-time evaluation**: the `$localize` tag is a run-time function that replaces and\n * reorders the parts (static strings and expressions) of the template literal string with strings\n * from a collection of translations loaded at run-time.\n *\n * * **pass-through evaluation**: the `$localize` tag is a run-time function that simply evaluates\n * the original template literal string without applying any translations to the parts. This\n * version is used during development or where there is no need to translate the localized\n * template literals.\n *\n * @param messageParts a collection of the static parts of the template string.\n * @param expressions a collection of the values of each placeholder in the template string.\n * @returns the translated string, with the `messageParts` and `expressions` interleaved together.\n *\n * @publicApi\n */\nconst $localize = function (messageParts, ...expressions) {\n  if ($localize.translate) {\n    // Don't use array expansion here to avoid the compiler adding `__read()` helper unnecessarily.\n    const translation = $localize.translate(messageParts, expressions);\n    messageParts = translation[0];\n    expressions = translation[1];\n  }\n  let message = stripBlock(messageParts[0], messageParts.raw[0]);\n  for (let i = 1; i < messageParts.length; i++) {\n    message += expressions[i - 1] + stripBlock(messageParts[i], messageParts.raw[i]);\n  }\n  return message;\n};\nconst BLOCK_MARKER = ':';\n/**\n * Strip a delimited \"block\" from the start of the `messagePart`, if it is found.\n *\n * If a marker character (:) actually appears in the content at the start of a tagged string or\n * after a substitution expression, where a block has not been provided the character must be\n * escaped with a backslash, `\\:`. This function checks for this by looking at the `raw`\n * messagePart, which should still contain the backslash.\n *\n * @param messagePart The cooked message part to process.\n * @param rawMessagePart The raw message part to check.\n * @returns the message part with the placeholder name stripped, if found.\n * @throws an error if the block is unterminated\n */\nfunction stripBlock(messagePart, rawMessagePart) {\n  return rawMessagePart.charAt(0) === BLOCK_MARKER ? messagePart.substring(findEndOfBlock(messagePart, rawMessagePart) + 1) : messagePart;\n}\nexport { $localize, BLOCK_MARKER$1 as BLOCK_MARKER, computeMsgId, findEndOfBlock, parseMessage, parseMetadata, splitBlock };\n","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { $localize } from './localize-CajB9YLv.mjs';\n\n// Attach $localize to the global context, as a side-effect of this module.\nglobalThis.$localize = $localize;\nexport { $localize };\n","'use strict';\n\n/**\n * @license Angular v<unknown>\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n  const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n  return symbolPrefix + name;\n}\nfunction initZone() {\n  const performance = global['performance'];\n  function mark(name) {\n    performance && performance['mark'] && performance['mark'](name);\n  }\n  function performanceMeasure(name, label) {\n    performance && performance['measure'] && performance['measure'](name, label);\n  }\n  mark('Zone');\n  let ZoneImpl = /*#__PURE__*/(() => {\n    class ZoneImpl {\n      static __symbol__ = __symbol__;\n      static assertZonePatched() {\n        if (global['Promise'] !== patches['ZoneAwarePromise']) {\n          throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' + 'has been overwritten.\\n' + 'Most likely cause is that a Promise polyfill has been loaded ' + 'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' + 'If you must load one, do so before loading zone.js.)');\n        }\n      }\n      static get root() {\n        let zone = ZoneImpl.current;\n        while (zone.parent) {\n          zone = zone.parent;\n        }\n        return zone;\n      }\n      static get current() {\n        return _currentZoneFrame.zone;\n      }\n      static get currentTask() {\n        return _currentTask;\n      }\n      static __load_patch(name, fn, ignoreDuplicate = false) {\n        if (patches.hasOwnProperty(name)) {\n          // `checkDuplicate` option is defined from global variable\n          // so it works for all modules.\n          // `ignoreDuplicate` can work for the specified module\n          const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n          if (!ignoreDuplicate && checkDuplicate) {\n            throw Error('Already loaded patch: ' + name);\n          }\n        } else if (!global['__Zone_disable_' + name]) {\n          const perfName = 'Zone:' + name;\n          mark(perfName);\n          patches[name] = fn(global, ZoneImpl, _api);\n          performanceMeasure(perfName, perfName);\n        }\n      }\n      get parent() {\n        return this._parent;\n      }\n      get name() {\n        return this._name;\n      }\n      _parent;\n      _name;\n      _properties;\n      _zoneDelegate;\n      constructor(parent, zoneSpec) {\n        this._parent = parent;\n        this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n        this._properties = zoneSpec && zoneSpec.properties || {};\n        this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n      }\n      get(key) {\n        const zone = this.getZoneWith(key);\n        if (zone) return zone._properties[key];\n      }\n      getZoneWith(key) {\n        let current = this;\n        while (current) {\n          if (current._properties.hasOwnProperty(key)) {\n            return current;\n          }\n          current = current._parent;\n        }\n        return null;\n      }\n      fork(zoneSpec) {\n        if (!zoneSpec) throw new Error('ZoneSpec required!');\n        return this._zoneDelegate.fork(this, zoneSpec);\n      }\n      wrap(callback, source) {\n        if (typeof callback !== 'function') {\n          throw new Error('Expecting function got: ' + callback);\n        }\n        const _callback = this._zoneDelegate.intercept(this, callback, source);\n        const zone = this;\n        return function () {\n          return zone.runGuarded(_callback, this, arguments, source);\n        };\n      }\n      run(callback, applyThis, applyArgs, source) {\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n        try {\n          return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n        } finally {\n          _currentZoneFrame = _currentZoneFrame.parent;\n        }\n      }\n      runGuarded(callback, applyThis = null, applyArgs, source) {\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n        try {\n          try {\n            return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n          } catch (error) {\n            if (this._zoneDelegate.handleError(this, error)) {\n              throw error;\n            }\n          }\n        } finally {\n          _currentZoneFrame = _currentZoneFrame.parent;\n        }\n      }\n      runTask(task, applyThis, applyArgs) {\n        if (task.zone != this) {\n          throw new Error('A task can only be run in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n        }\n        const zoneTask = task;\n        // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n        // will run in notScheduled(canceled) state, we should not try to\n        // run such kind of task but just return\n        const {\n          type,\n          data: {\n            isPeriodic = false,\n            isRefreshable = false\n          } = {}\n        } = task;\n        if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n          return;\n        }\n        const reEntryGuard = task.state != running;\n        reEntryGuard && zoneTask._transitionTo(running, scheduled);\n        const previousTask = _currentTask;\n        _currentTask = zoneTask;\n        _currentZoneFrame = {\n          parent: _currentZoneFrame,\n          zone: this\n        };\n        try {\n          if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n            task.cancelFn = undefined;\n          }\n          try {\n            return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n          } catch (error) {\n            if (this._zoneDelegate.handleError(this, error)) {\n              throw error;\n            }\n          }\n        } finally {\n          // if the task's state is notScheduled or unknown, then it has already been cancelled\n          // we should not reset the state to scheduled\n          const state = task.state;\n          if (state !== notScheduled && state !== unknown) {\n            if (type == eventTask || isPeriodic || isRefreshable && state === scheduling) {\n              reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n            } else {\n              const zoneDelegates = zoneTask._zoneDelegates;\n              this._updateTaskCount(zoneTask, -1);\n              reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n              if (isRefreshable) {\n                zoneTask._zoneDelegates = zoneDelegates;\n              }\n            }\n          }\n          _currentZoneFrame = _currentZoneFrame.parent;\n          _currentTask = previousTask;\n        }\n      }\n      scheduleTask(task) {\n        if (task.zone && task.zone !== this) {\n          // check if the task was rescheduled, the newZone\n          // should not be the children of the original zone\n          let newZone = this;\n          while (newZone) {\n            if (newZone === task.zone) {\n              throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n            }\n            newZone = newZone.parent;\n          }\n        }\n        task._transitionTo(scheduling, notScheduled);\n        const zoneDelegates = [];\n        task._zoneDelegates = zoneDelegates;\n        task._zone = this;\n        try {\n          task = this._zoneDelegate.scheduleTask(this, task);\n        } catch (err) {\n          // should set task's state to unknown when scheduleTask throw error\n          // because the err may from reschedule, so the fromState maybe notScheduled\n          task._transitionTo(unknown, scheduling, notScheduled);\n          // TODO: @JiaLiPassion, should we check the result from handleError?\n          this._zoneDelegate.handleError(this, err);\n          throw err;\n        }\n        if (task._zoneDelegates === zoneDelegates) {\n          // we have to check because internally the delegate can reschedule the task.\n          this._updateTaskCount(task, 1);\n        }\n        if (task.state == scheduling) {\n          task._transitionTo(scheduled, scheduling);\n        }\n        return task;\n      }\n      scheduleMicroTask(source, callback, data, customSchedule) {\n        return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n      }\n      scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n        return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n      }\n      scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n        return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n      }\n      cancelTask(task) {\n        if (task.zone != this) throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n        if (task.state !== scheduled && task.state !== running) {\n          return;\n        }\n        task._transitionTo(canceling, scheduled, running);\n        try {\n          this._zoneDelegate.cancelTask(this, task);\n        } catch (err) {\n          // if error occurs when cancelTask, transit the state to unknown\n          task._transitionTo(unknown, canceling);\n          this._zoneDelegate.handleError(this, err);\n          throw err;\n        }\n        this._updateTaskCount(task, -1);\n        task._transitionTo(notScheduled, canceling);\n        task.runCount = -1;\n        return task;\n      }\n      _updateTaskCount(task, count) {\n        const zoneDelegates = task._zoneDelegates;\n        if (count == -1) {\n          task._zoneDelegates = null;\n        }\n        for (let i = 0; i < zoneDelegates.length; i++) {\n          zoneDelegates[i]._updateTaskCount(task.type, count);\n        }\n      }\n    }\n    return ZoneImpl;\n  })();\n  const DELEGATE_ZS = {\n    name: '',\n    onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n    onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n    onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n    onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n  };\n  class _ZoneDelegate {\n    get zone() {\n      return this._zone;\n    }\n    _zone;\n    _taskCounts = {\n      'microTask': 0,\n      'macroTask': 0,\n      'eventTask': 0\n    };\n    _parentDelegate;\n    _forkDlgt;\n    _forkZS;\n    _forkCurrZone;\n    _interceptDlgt;\n    _interceptZS;\n    _interceptCurrZone;\n    _invokeDlgt;\n    _invokeZS;\n    _invokeCurrZone;\n    _handleErrorDlgt;\n    _handleErrorZS;\n    _handleErrorCurrZone;\n    _scheduleTaskDlgt;\n    _scheduleTaskZS;\n    _scheduleTaskCurrZone;\n    _invokeTaskDlgt;\n    _invokeTaskZS;\n    _invokeTaskCurrZone;\n    _cancelTaskDlgt;\n    _cancelTaskZS;\n    _cancelTaskCurrZone;\n    _hasTaskDlgt;\n    _hasTaskDlgtOwner;\n    _hasTaskZS;\n    _hasTaskCurrZone;\n    constructor(zone, parentDelegate, zoneSpec) {\n      this._zone = zone;\n      this._parentDelegate = parentDelegate;\n      this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n      this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n      this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n      this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n      this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n      this._interceptCurrZone = zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n      this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n      this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n      this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n      this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n      this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n      this._handleErrorCurrZone = zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n      this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n      this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n      this._scheduleTaskCurrZone = zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n      this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n      this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n      this._invokeTaskCurrZone = zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n      this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n      this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n      this._cancelTaskCurrZone = zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n      this._hasTaskZS = null;\n      this._hasTaskDlgt = null;\n      this._hasTaskDlgtOwner = null;\n      this._hasTaskCurrZone = null;\n      const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n      const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n      if (zoneSpecHasTask || parentHasTask) {\n        // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n        // a case all task related interceptors must go through this ZD. We can't short circuit it.\n        this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n        this._hasTaskDlgt = parentDelegate;\n        this._hasTaskDlgtOwner = this;\n        this._hasTaskCurrZone = this._zone;\n        if (!zoneSpec.onScheduleTask) {\n          this._scheduleTaskZS = DELEGATE_ZS;\n          this._scheduleTaskDlgt = parentDelegate;\n          this._scheduleTaskCurrZone = this._zone;\n        }\n        if (!zoneSpec.onInvokeTask) {\n          this._invokeTaskZS = DELEGATE_ZS;\n          this._invokeTaskDlgt = parentDelegate;\n          this._invokeTaskCurrZone = this._zone;\n        }\n        if (!zoneSpec.onCancelTask) {\n          this._cancelTaskZS = DELEGATE_ZS;\n          this._cancelTaskDlgt = parentDelegate;\n          this._cancelTaskCurrZone = this._zone;\n        }\n      }\n    }\n    fork(targetZone, zoneSpec) {\n      return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) : new ZoneImpl(targetZone, zoneSpec);\n    }\n    intercept(targetZone, callback, source) {\n      return this._interceptZS ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) : callback;\n    }\n    invoke(targetZone, callback, applyThis, applyArgs, source) {\n      return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) : callback.apply(applyThis, applyArgs);\n    }\n    handleError(targetZone, error) {\n      return this._handleErrorZS ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) : true;\n    }\n    scheduleTask(targetZone, task) {\n      let returnTask = task;\n      if (this._scheduleTaskZS) {\n        if (this._hasTaskZS) {\n          returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n        }\n        returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n        if (!returnTask) returnTask = task;\n      } else {\n        if (task.scheduleFn) {\n          task.scheduleFn(task);\n        } else if (task.type == microTask) {\n          scheduleMicroTask(task);\n        } else {\n          throw new Error('Task is missing scheduleFn.');\n        }\n      }\n      return returnTask;\n    }\n    invokeTask(targetZone, task, applyThis, applyArgs) {\n      return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) : task.callback.apply(applyThis, applyArgs);\n    }\n    cancelTask(targetZone, task) {\n      let value;\n      if (this._cancelTaskZS) {\n        value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n      } else {\n        if (!task.cancelFn) {\n          throw Error('Task is not cancelable');\n        }\n        value = task.cancelFn(task);\n      }\n      return value;\n    }\n    hasTask(targetZone, isEmpty) {\n      // hasTask should not throw error so other ZoneDelegate\n      // can still trigger hasTask callback\n      try {\n        this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n      } catch (err) {\n        this.handleError(targetZone, err);\n      }\n    }\n    _updateTaskCount(type, count) {\n      const counts = this._taskCounts;\n      const prev = counts[type];\n      const next = counts[type] = prev + count;\n      if (next < 0) {\n        throw new Error('More tasks executed then were scheduled.');\n      }\n      if (prev == 0 || next == 0) {\n        const isEmpty = {\n          microTask: counts['microTask'] > 0,\n          macroTask: counts['macroTask'] > 0,\n          eventTask: counts['eventTask'] > 0,\n          change: type\n        };\n        this.hasTask(this._zone, isEmpty);\n      }\n    }\n  }\n  class ZoneTask {\n    type;\n    source;\n    invoke;\n    callback;\n    data;\n    scheduleFn;\n    cancelFn;\n    _zone = null;\n    runCount = 0;\n    _zoneDelegates = null;\n    _state = 'notScheduled';\n    constructor(type, source, callback, options, scheduleFn, cancelFn) {\n      this.type = type;\n      this.source = source;\n      this.data = options;\n      this.scheduleFn = scheduleFn;\n      this.cancelFn = cancelFn;\n      if (!callback) {\n        throw new Error('callback is not defined');\n      }\n      this.callback = callback;\n      const self = this;\n      // TODO: @JiaLiPassion options should have interface\n      if (type === eventTask && options && options.useG) {\n        this.invoke = ZoneTask.invokeTask;\n      } else {\n        this.invoke = function () {\n          return ZoneTask.invokeTask.call(global, self, this, arguments);\n        };\n      }\n    }\n    static invokeTask(task, target, args) {\n      if (!task) {\n        task = this;\n      }\n      _numberOfNestedTaskFrames++;\n      try {\n        task.runCount++;\n        return task.zone.runTask(task, target, args);\n      } finally {\n        if (_numberOfNestedTaskFrames == 1) {\n          drainMicroTaskQueue();\n        }\n        _numberOfNestedTaskFrames--;\n      }\n    }\n    get zone() {\n      return this._zone;\n    }\n    get state() {\n      return this._state;\n    }\n    cancelScheduleRequest() {\n      this._transitionTo(notScheduled, scheduling);\n    }\n    _transitionTo(toState, fromState1, fromState2) {\n      if (this._state === fromState1 || this._state === fromState2) {\n        this._state = toState;\n        if (toState == notScheduled) {\n          this._zoneDelegates = null;\n        }\n      } else {\n        throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n      }\n    }\n    toString() {\n      if (this.data && typeof this.data.handleId !== 'undefined') {\n        return this.data.handleId.toString();\n      } else {\n        return Object.prototype.toString.call(this);\n      }\n    }\n    // add toJSON method to prevent cyclic error when\n    // call JSON.stringify(zoneTask)\n    toJSON() {\n      return {\n        type: this.type,\n        state: this.state,\n        source: this.source,\n        zone: this.zone.name,\n        runCount: this.runCount\n      };\n    }\n  }\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  MICROTASK QUEUE\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  const symbolSetTimeout = __symbol__('setTimeout');\n  const symbolPromise = __symbol__('Promise');\n  const symbolThen = __symbol__('then');\n  let _microTaskQueue = [];\n  let _isDrainingMicrotaskQueue = false;\n  let nativeMicroTaskQueuePromise;\n  function nativeScheduleMicroTask(func) {\n    if (!nativeMicroTaskQueuePromise) {\n      if (global[symbolPromise]) {\n        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n      }\n    }\n    if (nativeMicroTaskQueuePromise) {\n      let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n      if (!nativeThen) {\n        // native Promise is not patchable, we need to use `then` directly\n        // issue 1078\n        nativeThen = nativeMicroTaskQueuePromise['then'];\n      }\n      nativeThen.call(nativeMicroTaskQueuePromise, func);\n    } else {\n      global[symbolSetTimeout](func, 0);\n    }\n  }\n  function scheduleMicroTask(task) {\n    // if we are not running in any task, and there has not been anything scheduled\n    // we must bootstrap the initial task creation by manually scheduling the drain\n    if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n      // We are not running in Task, so we need to kickstart the microtask queue.\n      nativeScheduleMicroTask(drainMicroTaskQueue);\n    }\n    task && _microTaskQueue.push(task);\n  }\n  function drainMicroTaskQueue() {\n    if (!_isDrainingMicrotaskQueue) {\n      _isDrainingMicrotaskQueue = true;\n      while (_microTaskQueue.length) {\n        const queue = _microTaskQueue;\n        _microTaskQueue = [];\n        for (let i = 0; i < queue.length; i++) {\n          const task = queue[i];\n          try {\n            task.zone.runTask(task, null, null);\n          } catch (error) {\n            _api.onUnhandledError(error);\n          }\n        }\n      }\n      _api.microtaskDrainDone();\n      _isDrainingMicrotaskQueue = false;\n    }\n  }\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  BOOTSTRAP\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  const NO_ZONE = {\n    name: 'NO ZONE'\n  };\n  const notScheduled = 'notScheduled',\n    scheduling = 'scheduling',\n    scheduled = 'scheduled',\n    running = 'running',\n    canceling = 'canceling',\n    unknown = 'unknown';\n  const microTask = 'microTask',\n    macroTask = 'macroTask',\n    eventTask = 'eventTask';\n  const patches = {};\n  const _api = {\n    symbol: __symbol__,\n    currentZoneFrame: () => _currentZoneFrame,\n    onUnhandledError: noop,\n    microtaskDrainDone: noop,\n    scheduleMicroTask: scheduleMicroTask,\n    showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n    patchEventTarget: () => [],\n    patchOnProperties: noop,\n    patchMethod: () => noop,\n    bindArguments: () => [],\n    patchThen: () => noop,\n    patchMacroTask: () => noop,\n    patchEventPrototype: () => noop,\n    isIEOrEdge: () => false,\n    getGlobalObjects: () => undefined,\n    ObjectDefineProperty: () => noop,\n    ObjectGetOwnPropertyDescriptor: () => undefined,\n    ObjectCreate: () => undefined,\n    ArraySlice: () => [],\n    patchClass: () => noop,\n    wrapWithCurrentZone: () => noop,\n    filterProperties: () => [],\n    attachOriginToPatched: () => noop,\n    _redefineProperty: () => noop,\n    patchCallbacks: () => noop,\n    nativeScheduleMicroTask: nativeScheduleMicroTask\n  };\n  let _currentZoneFrame = {\n    parent: null,\n    zone: new ZoneImpl(null, null)\n  };\n  let _currentTask = null;\n  let _numberOfNestedTaskFrames = 0;\n  function noop() {}\n  performanceMeasure('Zone', 'Zone');\n  return ZoneImpl;\n}\nfunction loadZone() {\n  // if global['Zone'] already exists (maybe zone.js was already loaded or\n  // some other lib also registered a global object named Zone), we may need\n  // to throw an error, but sometimes user may not want this error.\n  // For example,\n  // we have two web pages, page1 includes zone.js, page2 doesn't.\n  // and the 1st time user load page1 and page2, everything work fine,\n  // but when user load page2 again, error occurs because global['Zone'] already exists.\n  // so we add a flag to let user choose whether to throw this error or not.\n  // By default, if existing Zone is from zone.js, we will not throw the error.\n  const global = globalThis;\n  const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n  if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n    throw new Error('Zone already loaded.');\n  }\n  // Initialize global `Zone` constant.\n  global['Zone'] ??= initZone();\n  return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n  return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n  return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (typeof args[i] === 'function') {\n      args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n    }\n  }\n  return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n  const source = prototype.constructor['name'];\n  for (let i = 0; i < fnNames.length; i++) {\n    const name = fnNames[i];\n    const delegate = prototype[name];\n    if (delegate) {\n      const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n      if (!isPropertyWritable(prototypeDesc)) {\n        continue;\n      }\n      prototype[name] = (delegate => {\n        const patched = function () {\n          return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n        };\n        attachOriginToPatched(patched, delegate);\n        return patched;\n      })(delegate);\n    }\n  }\n}\nfunction isPropertyWritable(propertyDesc) {\n  if (!propertyDesc) {\n    return true;\n  }\n  if (propertyDesc.writable === false) {\n    return false;\n  }\n  return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) && typeof _global.process !== 'undefined' && _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' && _global.process.toString() === '[object process]' && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n  // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n  // event will be undefined, so we need to use window.event\n  event = event || _global.event;\n  if (!event) {\n    return;\n  }\n  let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n  }\n  const target = this || event.target || _global;\n  const listener = target[eventNameSymbol];\n  let result;\n  if (isBrowser && target === internalWindow && event.type === 'error') {\n    // window.onerror have different signature\n    // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n    // and onerror callback will prevent default when callback return true\n    const errorEvent = event;\n    result = listener && listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n    if (result === true) {\n      event.preventDefault();\n    }\n  } else {\n    result = listener && listener.apply(this, arguments);\n    if (\n    // https://github.com/angular/angular/issues/47579\n    // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n    // This is the only specific case we should check for. The spec defines that the\n    // `returnValue` attribute represents the message to show the user. When the event\n    // is created, this attribute must be set to the empty string.\n    event.type === 'beforeunload' &&\n    // To prevent any breaking changes resulting from this change, given that\n    // it was already causing a significant number of failures in G3, we have hidden\n    // that behavior behind a global configuration flag. Consumers can enable this\n    // flag explicitly if they want the `beforeunload` event to be handled as defined\n    // in the specification.\n    _global[enableBeforeunloadSymbol] &&\n    // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n    // `typeof result` is a string.\n    typeof result === 'string') {\n      event.returnValue = result;\n    } else if (result != undefined && !result) {\n      event.preventDefault();\n    }\n  }\n  return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n  let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n  if (!desc && prototype) {\n    // when patch window object, use prototype to check prop exist or not\n    const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n    if (prototypeDesc) {\n      desc = {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  }\n  // if the descriptor not exists or is not configurable\n  // just return\n  if (!desc || !desc.configurable) {\n    return;\n  }\n  const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n  if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n    return;\n  }\n  // A property descriptor cannot have getter/setter and be writable\n  // deleting the writable and value properties avoids this error:\n  //\n  // TypeError: property descriptors must not specify a value or be writable when a\n  // getter or setter has been specified\n  delete desc.writable;\n  delete desc.value;\n  const originalDescGet = desc.get;\n  const originalDescSet = desc.set;\n  // slice(2) cuz 'onclick' -> 'click', etc\n  const eventName = prop.slice(2);\n  let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n  }\n  desc.set = function (newValue) {\n    // In some versions of Windows, the `this` context may be undefined\n    // in on-property callbacks.\n    // To handle this edge case, we check if `this` is falsy and\n    // fallback to `_global` if needed.\n    let target = this;\n    if (!target && obj === _global) {\n      target = _global;\n    }\n    if (!target) {\n      return;\n    }\n    const previousValue = target[eventNameSymbol];\n    if (typeof previousValue === 'function') {\n      target.removeEventListener(eventName, wrapFn);\n    }\n    // https://github.com/angular/zone.js/issues/978\n    // If an inline handler (like `onload`) was defined before zone.js was loaded,\n    // call the original descriptor's setter to clean it up.\n    originalDescSet?.call(target, null);\n    target[eventNameSymbol] = newValue;\n    if (typeof newValue === 'function') {\n      target.addEventListener(eventName, wrapFn, false);\n    }\n  };\n  // The getter would return undefined for unassigned properties but the default value of an\n  // unassigned property is null\n  desc.get = function () {\n    // in some of windows's onproperty callback, this is undefined\n    // so we need to check it\n    let target = this;\n    if (!target && obj === _global) {\n      target = _global;\n    }\n    if (!target) {\n      return null;\n    }\n    const listener = target[eventNameSymbol];\n    if (listener) {\n      return listener;\n    } else if (originalDescGet) {\n      // result will be null when use inline event attribute,\n      // such as <button onclick=\"func();\">OK</button>\n      // because the onclick function is internal raw uncompiled handler\n      // the onclick will be evaluated when first time event was triggered or\n      // the property is accessed, https://github.com/angular/zone.js/issues/525\n      // so we should use original native get to retrieve the handler\n      let value = originalDescGet.call(this);\n      if (value) {\n        desc.set.call(this, value);\n        if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n          target.removeAttribute(prop);\n        }\n        return value;\n      }\n    }\n    return null;\n  };\n  ObjectDefineProperty(obj, prop, desc);\n  obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n  if (properties) {\n    for (let i = 0; i < properties.length; i++) {\n      patchProperty(obj, 'on' + properties[i], prototype);\n    }\n  } else {\n    const onProperties = [];\n    for (const prop in obj) {\n      if (prop.slice(0, 2) == 'on') {\n        onProperties.push(prop);\n      }\n    }\n    for (let j = 0; j < onProperties.length; j++) {\n      patchProperty(obj, onProperties[j], prototype);\n    }\n  }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n  const OriginalClass = _global[className];\n  if (!OriginalClass) return;\n  // keep original class in global\n  _global[zoneSymbol(className)] = OriginalClass;\n  _global[className] = function () {\n    const a = bindArguments(arguments, className);\n    switch (a.length) {\n      case 0:\n        this[originalInstanceKey] = new OriginalClass();\n        break;\n      case 1:\n        this[originalInstanceKey] = new OriginalClass(a[0]);\n        break;\n      case 2:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n        break;\n      case 3:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n        break;\n      case 4:\n        this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n        break;\n      default:\n        throw new Error('Arg list too long.');\n    }\n  };\n  // attach original delegate to patched function\n  attachOriginToPatched(_global[className], OriginalClass);\n  const instance = new OriginalClass(function () {});\n  let prop;\n  for (prop in instance) {\n    // https://bugs.webkit.org/show_bug.cgi?id=44721\n    if (className === 'XMLHttpRequest' && prop === 'responseBlob') continue;\n    (function (prop) {\n      if (typeof instance[prop] === 'function') {\n        _global[className].prototype[prop] = function () {\n          return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n        };\n      } else {\n        ObjectDefineProperty(_global[className].prototype, prop, {\n          set: function (fn) {\n            if (typeof fn === 'function') {\n              this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n              // keep callback in wrapped function so we can\n              // use it in Function.prototype.toString to return\n              // the native one.\n              attachOriginToPatched(this[originalInstanceKey][prop], fn);\n            } else {\n              this[originalInstanceKey][prop] = fn;\n            }\n          },\n          get: function () {\n            return this[originalInstanceKey][prop];\n          }\n        });\n      }\n    })(prop);\n  }\n  for (prop in OriginalClass) {\n    if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n      _global[className][prop] = OriginalClass[prop];\n    }\n  }\n}\nfunction patchMethod(target, name, patchFn) {\n  let proto = target;\n  while (proto && !proto.hasOwnProperty(name)) {\n    proto = ObjectGetPrototypeOf(proto);\n  }\n  if (!proto && target[name]) {\n    // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n    proto = target;\n  }\n  const delegateName = zoneSymbol(name);\n  let delegate = null;\n  if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n    delegate = proto[delegateName] = proto[name];\n    // check whether proto[name] is writable\n    // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n    const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n    if (isPropertyWritable(desc)) {\n      const patchDelegate = patchFn(delegate, delegateName, name);\n      proto[name] = function () {\n        return patchDelegate(this, arguments);\n      };\n      attachOriginToPatched(proto[name], delegate);\n    }\n  }\n  return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n  let setNative = null;\n  function scheduleTask(task) {\n    const data = task.data;\n    data.args[data.cbIdx] = function () {\n      task.invoke.apply(this, arguments);\n    };\n    setNative.apply(data.target, data.args);\n    return task;\n  }\n  setNative = patchMethod(obj, funcName, delegate => function (self, args) {\n    const meta = metaCreator(self, args);\n    if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n      return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(self, args);\n    }\n  });\n}\nfunction attachOriginToPatched(patched, original) {\n  patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIEOrEdge() {\n  if (isDetectedIEOrEdge) {\n    return ieOrEdge;\n  }\n  isDetectedIEOrEdge = true;\n  try {\n    const ua = internalWindow.navigator.userAgent;\n    if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n      ieOrEdge = true;\n    }\n  } catch (error) {}\n  return ieOrEdge;\n}\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n  useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n  const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n  const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n  const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n  const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n  zoneSymbolEventNames[eventName] = {};\n  zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n  zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n  const ADD_EVENT_LISTENER = patchOptions && patchOptions.add || ADD_EVENT_LISTENER_STR;\n  const REMOVE_EVENT_LISTENER = patchOptions && patchOptions.rm || REMOVE_EVENT_LISTENER_STR;\n  const LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.listeners || 'eventListeners';\n  const REMOVE_ALL_LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.rmAll || 'removeAllListeners';\n  const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n  const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n  const PREPEND_EVENT_LISTENER = 'prependListener';\n  const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n  const invokeTask = function (task, target, event) {\n    // for better performance, check isRemoved which is set\n    // by removeEventListener\n    if (task.isRemoved) {\n      return;\n    }\n    const delegate = task.callback;\n    if (typeof delegate === 'object' && delegate.handleEvent) {\n      // create the bind version of handleEvent when invoke\n      task.callback = event => delegate.handleEvent(event);\n      task.originalDelegate = delegate;\n    }\n    // invoke static task.invoke\n    // need to try/catch error here, otherwise, the error in one event listener\n    // will break the executions of the other event listeners. Also error will\n    // not remove the event listener when `once` options is true.\n    let error;\n    try {\n      task.invoke(task, target, [event]);\n    } catch (err) {\n      error = err;\n    }\n    const options = task.options;\n    if (options && typeof options === 'object' && options.once) {\n      // if options.once is true, after invoke once remove listener here\n      // only browser need to do this, nodejs eventEmitter will cal removeListener\n      // inside EventEmitter.once\n      const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n      target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n    }\n    return error;\n  };\n  function globalCallback(context, event, isCapture) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n      return;\n    }\n    // event.target is needed for Samsung TV and SourceBuffer\n    // || global is needed https://github.com/angular/zone.js/issues/190\n    const target = context || event.target || _global;\n    const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n    if (tasks) {\n      const errors = [];\n      // invoke all tasks which attached to current target with given event.type and capture = false\n      // for performance concern, if task.length === 1, just invoke\n      if (tasks.length === 1) {\n        const err = invokeTask(tasks[0], target, event);\n        err && errors.push(err);\n      } else {\n        // https://github.com/angular/zone.js/issues/836\n        // copy the tasks array before invoke, to avoid\n        // the callback will remove itself or other listener\n        const copyTasks = tasks.slice();\n        for (let i = 0; i < copyTasks.length; i++) {\n          if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n            break;\n          }\n          const err = invokeTask(copyTasks[i], target, event);\n          err && errors.push(err);\n        }\n      }\n      // Since there is only one error, we don't need to schedule microTask\n      // to throw the error.\n      if (errors.length === 1) {\n        throw errors[0];\n      } else {\n        for (let i = 0; i < errors.length; i++) {\n          const err = errors[i];\n          api.nativeScheduleMicroTask(() => {\n            throw err;\n          });\n        }\n      }\n    }\n  }\n  // global shared zoneAwareCallback to handle all event callback with capture = false\n  const globalZoneAwareCallback = function (event) {\n    return globalCallback(this, event, false);\n  };\n  // global shared zoneAwareCallback to handle all event callback with capture = true\n  const globalZoneAwareCaptureCallback = function (event) {\n    return globalCallback(this, event, true);\n  };\n  function patchEventTargetMethods(obj, patchOptions) {\n    if (!obj) {\n      return false;\n    }\n    let useGlobalCallback = true;\n    if (patchOptions && patchOptions.useG !== undefined) {\n      useGlobalCallback = patchOptions.useG;\n    }\n    const validateHandler = patchOptions && patchOptions.vh;\n    let checkDuplicate = true;\n    if (patchOptions && patchOptions.chkDup !== undefined) {\n      checkDuplicate = patchOptions.chkDup;\n    }\n    let returnTarget = false;\n    if (patchOptions && patchOptions.rt !== undefined) {\n      returnTarget = patchOptions.rt;\n    }\n    let proto = obj;\n    while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n      proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && obj[ADD_EVENT_LISTENER]) {\n      // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n      proto = obj;\n    }\n    if (!proto) {\n      return false;\n    }\n    if (proto[zoneSymbolAddEventListener]) {\n      return false;\n    }\n    const eventNameToString = patchOptions && patchOptions.eventNameToString;\n    // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n    // eliminating the need to create a new object solely for passing data.\n    // WARNING: This object has a static lifetime, meaning it is not created\n    // each time `addEventListener` is called. It is instantiated only once\n    // and captured by reference inside the `addEventListener` and\n    // `removeEventListener` functions. Do not add any new properties to this\n    // object, as doing so would necessitate maintaining the information\n    // between `addEventListener` calls.\n    const taskData = {};\n    const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n    const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] = proto[REMOVE_EVENT_LISTENER];\n    const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] = proto[LISTENERS_EVENT_LISTENER];\n    const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] = proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n    let nativePrependEventListener;\n    if (patchOptions && patchOptions.prepend) {\n      nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] = proto[patchOptions.prepend];\n    }\n    /**\n     * This util function will build an option object with passive option\n     * to handle all possible input from the user.\n     */\n    function buildEventListenerOptions(options, passive) {\n      if (!passive) {\n        return options;\n      }\n      if (typeof options === 'boolean') {\n        return {\n          capture: options,\n          passive: true\n        };\n      }\n      if (!options) {\n        return {\n          passive: true\n        };\n      }\n      if (typeof options === 'object' && options.passive !== false) {\n        return {\n          ...options,\n          passive: true\n        };\n      }\n      return options;\n    }\n    const customScheduleGlobal = function (task) {\n      // if there is already a task for the eventName + capture,\n      // just return, because we use the shared globalZoneAwareCallback here.\n      if (taskData.isExisting) {\n        return;\n      }\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n    };\n    /**\n     * In the context of events and listeners, this function will be\n     * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n     * Cancelling a task is primarily used to remove event listeners from\n     * the task target.\n     */\n    const customCancelGlobal = function (task) {\n      // if task is not marked as isRemoved, this call is directly\n      // from Zone.prototype.cancelTask, we should remove the task\n      // from tasksList of target first\n      if (!task.isRemoved) {\n        const symbolEventNames = zoneSymbolEventNames[task.eventName];\n        let symbolEventName;\n        if (symbolEventNames) {\n          symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n        }\n        const existingTasks = symbolEventName && task.target[symbolEventName];\n        if (existingTasks) {\n          for (let i = 0; i < existingTasks.length; i++) {\n            const existingTask = existingTasks[i];\n            if (existingTask === task) {\n              existingTasks.splice(i, 1);\n              // set isRemoved to data for faster invokeTask check\n              task.isRemoved = true;\n              if (task.removeAbortListener) {\n                task.removeAbortListener();\n                task.removeAbortListener = null;\n              }\n              if (existingTasks.length === 0) {\n                // all tasks for the eventName + capture have gone,\n                // remove globalZoneAwareCallback and remove the task cache from target\n                task.allRemoved = true;\n                task.target[symbolEventName] = null;\n              }\n              break;\n            }\n          }\n        }\n      }\n      // if all tasks for the eventName + capture have gone,\n      // we will really remove the global event callback,\n      // if not, return\n      if (!task.allRemoved) {\n        return;\n      }\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n    };\n    const customScheduleNonGlobal = function (task) {\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n    const customSchedulePrepend = function (task) {\n      return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n    const customCancelNonGlobal = function (task) {\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n    };\n    const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n    const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n    const compareTaskCallbackVsDelegate = function (task, delegate) {\n      const typeOfDelegate = typeof delegate;\n      return typeOfDelegate === 'function' && task.callback === delegate || typeOfDelegate === 'object' && task.originalDelegate === delegate;\n    };\n    const compare = patchOptions?.diff || compareTaskCallbackVsDelegate;\n    const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n    const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n    function copyEventListenerOptions(options) {\n      if (typeof options === 'object' && options !== null) {\n        // We need to destructure the target `options` object since it may\n        // be frozen or sealed (possibly provided implicitly by a third-party\n        // library), or its properties may be readonly.\n        const newOptions = {\n          ...options\n        };\n        // The `signal` option was recently introduced, which caused regressions in\n        // third-party scenarios where `AbortController` was directly provided to\n        // `addEventListener` as options. For instance, in cases like\n        // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n        // which is valid because `AbortController` includes a `signal` getter, spreading\n        // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n        // isn't feasible since `AbortController` is a built-in object type, and attempting\n        // to create a new object directly with it as the prototype might result in\n        // unexpected behavior.\n        if (options.signal) {\n          newOptions.signal = options.signal;\n        }\n        return newOptions;\n      }\n      return options;\n    }\n    const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n      return function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n        let delegate = arguments[1];\n        if (!delegate) {\n          return nativeListener.apply(this, arguments);\n        }\n        if (isNode && eventName === 'uncaughtException') {\n          // don't patch uncaughtException of nodejs to prevent endless loop\n          return nativeListener.apply(this, arguments);\n        }\n        // To improve `addEventListener` performance, we will create the callback\n        // for the task later when the task is invoked.\n        let isEventListenerObject = false;\n        if (typeof delegate !== 'function') {\n          // This checks whether the provided listener argument is an object with\n          // a `handleEvent` method (since we can call `addEventListener` with a\n          // function `event => ...` or with an object `{ handleEvent: event => ... }`).\n          if (!delegate.handleEvent) {\n            return nativeListener.apply(this, arguments);\n          }\n          isEventListenerObject = true;\n        }\n        if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n          return;\n        }\n        const passive = !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n        const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n        const signal = options?.signal;\n        if (signal?.aborted) {\n          // the signal is an aborted one, just return without attaching the event listener.\n          return;\n        }\n        if (unpatchedEvents) {\n          // check unpatched list\n          for (let i = 0; i < unpatchedEvents.length; i++) {\n            if (eventName === unpatchedEvents[i]) {\n              if (passive) {\n                return nativeListener.call(target, eventName, delegate, options);\n              } else {\n                return nativeListener.apply(this, arguments);\n              }\n            }\n          }\n        }\n        const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n        const once = options && typeof options === 'object' ? options.once : false;\n        const zone = Zone.current;\n        let symbolEventNames = zoneSymbolEventNames[eventName];\n        if (!symbolEventNames) {\n          prepareEventNames(eventName, eventNameToString);\n          symbolEventNames = zoneSymbolEventNames[eventName];\n        }\n        const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n        let existingTasks = target[symbolEventName];\n        let isExisting = false;\n        if (existingTasks) {\n          // already have task registered\n          isExisting = true;\n          if (checkDuplicate) {\n            for (let i = 0; i < existingTasks.length; i++) {\n              if (compare(existingTasks[i], delegate)) {\n                // same callback, same capture, same event name, just return\n                return;\n              }\n            }\n          }\n        } else {\n          existingTasks = target[symbolEventName] = [];\n        }\n        let source;\n        const constructorName = target.constructor['name'];\n        const targetSource = globalSources[constructorName];\n        if (targetSource) {\n          source = targetSource[eventName];\n        }\n        if (!source) {\n          source = constructorName + addSource + (eventNameToString ? eventNameToString(eventName) : eventName);\n        }\n        // In the code below, `options` should no longer be reassigned; instead, it\n        // should only be mutated. This is because we pass that object to the native\n        // `addEventListener`.\n        // It's generally recommended to use the same object reference for options.\n        // This ensures consistency and avoids potential issues.\n        taskData.options = options;\n        if (once) {\n          // When using `addEventListener` with the `once` option, we don't pass\n          // the `once` option directly to the native `addEventListener` method.\n          // Instead, we keep the `once` setting and handle it ourselves.\n          taskData.options.once = false;\n        }\n        taskData.target = target;\n        taskData.capture = capture;\n        taskData.eventName = eventName;\n        taskData.isExisting = isExisting;\n        const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n        // keep taskData into data to allow onScheduleEventTask to access the task information\n        if (data) {\n          data.taskData = taskData;\n        }\n        if (signal) {\n          // When using `addEventListener` with the `signal` option, we don't pass\n          // the `signal` option directly to the native `addEventListener` method.\n          // Instead, we keep the `signal` setting and handle it ourselves.\n          taskData.options.signal = undefined;\n        }\n        // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n        // which in turn calls the native `addEventListener`. This is why `taskData.options`\n        // is updated before scheduling the task, as `customScheduleGlobal` uses\n        // `taskData.options` to pass it to the native `addEventListener`.\n        const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n        if (signal) {\n          // after task is scheduled, we need to store the signal back to task.options\n          taskData.options.signal = signal;\n          // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n          // primarily used for preventing strong references cycles. `onAbort` is always reachable\n          // as it's an event listener, so its closure retains a strong reference to the `task`.\n          const onAbort = () => task.zone.cancelTask(task);\n          nativeListener.call(signal, 'abort', onAbort, {\n            once: true\n          });\n          // We need to remove the `abort` listener when the event listener is going to be removed,\n          // as it creates a closure that captures `task`. This closure retains a reference to the\n          // `task` object even after it goes out of scope, preventing `task` from being garbage\n          // collected.\n          task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n        }\n        // should clear taskData.target to avoid memory leak\n        // issue, https://github.com/angular/angular/issues/20442\n        taskData.target = null;\n        // need to clear up taskData because it is a global object\n        if (data) {\n          data.taskData = null;\n        }\n        // have to save those information to task in case\n        // application may call task.zone.cancelTask() directly\n        if (once) {\n          taskData.options.once = true;\n        }\n        if (typeof task.options !== 'boolean') {\n          // We should save the options on the task (if it's an object) because\n          // we'll be using `task.options` later when removing the event listener\n          // and passing it back to `removeEventListener`.\n          task.options = options;\n        }\n        task.target = target;\n        task.capture = capture;\n        task.eventName = eventName;\n        if (isEventListenerObject) {\n          // save original delegate for compare to check duplicate\n          task.originalDelegate = delegate;\n        }\n        if (!prepend) {\n          existingTasks.push(task);\n        } else {\n          existingTasks.unshift(task);\n        }\n        if (returnTarget) {\n          return target;\n        }\n      };\n    };\n    proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n    if (nativePrependEventListener) {\n      proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n    }\n    proto[REMOVE_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n      const options = arguments[2];\n      const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n      const delegate = arguments[1];\n      if (!delegate) {\n        return nativeRemoveEventListener.apply(this, arguments);\n      }\n      if (validateHandler && !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n        return;\n      }\n      const symbolEventNames = zoneSymbolEventNames[eventName];\n      let symbolEventName;\n      if (symbolEventNames) {\n        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n      }\n      const existingTasks = symbolEventName && target[symbolEventName];\n      // `existingTasks` may not exist if the `addEventListener` was called before\n      // it was patched by zone.js. Please refer to the attached issue for\n      // clarification, particularly after the `if` condition, before calling\n      // the native `removeEventListener`.\n      if (existingTasks) {\n        for (let i = 0; i < existingTasks.length; i++) {\n          const existingTask = existingTasks[i];\n          if (compare(existingTask, delegate)) {\n            existingTasks.splice(i, 1);\n            // set isRemoved to data for faster invokeTask check\n            existingTask.isRemoved = true;\n            if (existingTasks.length === 0) {\n              // all tasks for the eventName + capture have gone,\n              // remove globalZoneAwareCallback and remove the task cache from target\n              existingTask.allRemoved = true;\n              target[symbolEventName] = null;\n              // in the target, we have an event listener which is added by on_property\n              // such as target.onclick = function() {}, so we need to clear this internal\n              // property too if all delegates with capture=false were removed\n              // https:// github.com/angular/angular/issues/31643\n              // https://github.com/angular/angular/issues/54581\n              if (!capture && typeof eventName === 'string') {\n                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                target[onPropertySymbol] = null;\n              }\n            }\n            // In all other conditions, when `addEventListener` is called after being\n            // patched by zone.js, we would always find an event task on the `EventTarget`.\n            // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n            // which ultimately removes an event listener and cleans up the abort listener\n            // (if an `AbortSignal` was provided when scheduling a task).\n            existingTask.zone.cancelTask(existingTask);\n            if (returnTarget) {\n              return target;\n            }\n            return;\n          }\n        }\n      }\n      // https://github.com/angular/zone.js/issues/930\n      // We may encounter a situation where the `addEventListener` was\n      // called on the event target before zone.js is loaded, resulting\n      // in no task being stored on the event target due to its invocation\n      // of the native implementation. In this scenario, we simply need to\n      // invoke the native `removeEventListener`.\n      return nativeRemoveEventListener.apply(this, arguments);\n    };\n    proto[LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n      const listeners = [];\n      const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n      for (let i = 0; i < tasks.length; i++) {\n        const task = tasks[i];\n        let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n        listeners.push(delegate);\n      }\n      return listeners;\n    };\n    proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (!eventName) {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i++) {\n          const prop = keys[i];\n          const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n          let evtName = match && match[1];\n          // in nodejs EventEmitter, removeListener event is\n          // used for monitoring the removeListener call,\n          // so just keep removeListener eventListener until\n          // all other eventListeners are removed\n          if (evtName && evtName !== 'removeListener') {\n            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n          }\n        }\n        // remove removeListener listener finally\n        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n      } else {\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n        const symbolEventNames = zoneSymbolEventNames[eventName];\n        if (symbolEventNames) {\n          const symbolEventName = symbolEventNames[FALSE_STR];\n          const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n          const tasks = target[symbolEventName];\n          const captureTasks = target[symbolCaptureEventName];\n          if (tasks) {\n            const removeTasks = tasks.slice();\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n          if (captureTasks) {\n            const removeTasks = captureTasks.slice();\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n        }\n      }\n      if (returnTarget) {\n        return this;\n      }\n    };\n    // for native toString patch\n    attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n    attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n    if (nativeRemoveAllListeners) {\n      attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n    }\n    if (nativeListeners) {\n      attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n    }\n    return true;\n  }\n  let results = [];\n  for (let i = 0; i < apis.length; i++) {\n    results[i] = patchEventTargetMethods(apis[i], patchOptions);\n  }\n  return results;\n}\nfunction findEventTasks(target, eventName) {\n  if (!eventName) {\n    const foundTasks = [];\n    for (let prop in target) {\n      const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n      let evtName = match && match[1];\n      if (evtName && (!eventName || evtName === eventName)) {\n        const tasks = target[prop];\n        if (tasks) {\n          for (let i = 0; i < tasks.length; i++) {\n            foundTasks.push(tasks[i]);\n          }\n        }\n      }\n    }\n    return foundTasks;\n  }\n  let symbolEventName = zoneSymbolEventNames[eventName];\n  if (!symbolEventName) {\n    prepareEventNames(eventName);\n    symbolEventName = zoneSymbolEventNames[eventName];\n  }\n  const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n  const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n  if (!captureFalseTasks) {\n    return captureTrueTasks ? captureTrueTasks.slice() : [];\n  } else {\n    return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) : captureFalseTasks.slice();\n  }\n}\nfunction patchEventPrototype(global, api) {\n  const Event = global['Event'];\n  if (Event && Event.prototype) {\n    api.patchMethod(Event.prototype, 'stopImmediatePropagation', delegate => function (self, args) {\n      self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n      // we need to call the native stopImmediatePropagation\n      // in case in some hybrid application, some part of\n      // application will be controlled by zone, some are not\n      delegate && delegate.apply(self, args);\n    });\n  }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n  api.patchMethod(global, 'queueMicrotask', delegate => {\n    return function (self, args) {\n      Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n    };\n  });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n  let setNative = null;\n  let clearNative = null;\n  setName += nameSuffix;\n  cancelName += nameSuffix;\n  const tasksByHandleId = {};\n  function scheduleTask(task) {\n    const data = task.data;\n    data.args[0] = function () {\n      return task.invoke.apply(this, arguments);\n    };\n    const handleOrId = setNative.apply(window, data.args);\n    // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n    // to this so that we do not cause potentally leaks when using `setTimeout`\n    // since this can be periodic when using `.refresh`.\n    if (isNumber(handleOrId)) {\n      data.handleId = handleOrId;\n    } else {\n      data.handle = handleOrId;\n      // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n      data.isRefreshable = isFunction(handleOrId.refresh);\n    }\n    return task;\n  }\n  function clearTask(task) {\n    const {\n      handle,\n      handleId\n    } = task.data;\n    return clearNative.call(window, handle ?? handleId);\n  }\n  setNative = patchMethod(window, setName, delegate => function (self, args) {\n    if (isFunction(args[0])) {\n      const options = {\n        isRefreshable: false,\n        isPeriodic: nameSuffix === 'Interval',\n        delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n        args: args\n      };\n      const callback = args[0];\n      args[0] = function timer() {\n        try {\n          return callback.apply(this, arguments);\n        } finally {\n          // issue-934, task will be cancelled\n          // even it is a periodic task such as\n          // setInterval\n          // https://github.com/angular/angular/issues/40387\n          // Cleanup tasksByHandleId should be handled before scheduleTask\n          // Since some zoneSpec may intercept and doesn't trigger\n          // scheduleFn(scheduleTask) provided here.\n          const {\n            handle,\n            handleId,\n            isPeriodic,\n            isRefreshable\n          } = options;\n          if (!isPeriodic && !isRefreshable) {\n            if (handleId) {\n              // in non-nodejs env, we remove timerId\n              // from local cache\n              delete tasksByHandleId[handleId];\n            } else if (handle) {\n              // Node returns complex objects as handleIds\n              // we remove task reference from timer object\n              handle[taskSymbol] = null;\n            }\n          }\n        }\n      };\n      const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n      if (!task) {\n        return task;\n      }\n      // Node.js must additionally support the ref and unref functions.\n      const {\n        handleId,\n        handle,\n        isRefreshable,\n        isPeriodic\n      } = task.data;\n      if (handleId) {\n        // for non nodejs env, we save handleId: task\n        // mapping in local cache for clearTimeout\n        tasksByHandleId[handleId] = task;\n      } else if (handle) {\n        // for nodejs env, we save task\n        // reference in timerId Object for clearTimeout\n        handle[taskSymbol] = task;\n        if (isRefreshable && !isPeriodic) {\n          const originalRefresh = handle.refresh;\n          handle.refresh = function () {\n            const {\n              zone,\n              state\n            } = task;\n            if (state === 'notScheduled') {\n              task._state = 'scheduled';\n              zone._updateTaskCount(task, 1);\n            } else if (state === 'running') {\n              task._state = 'scheduling';\n            }\n            return originalRefresh.call(this);\n          };\n        }\n      }\n      return handle ?? handleId ?? task;\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(window, args);\n    }\n  });\n  clearNative = patchMethod(window, cancelName, delegate => function (self, args) {\n    const id = args[0];\n    let task;\n    if (isNumber(id)) {\n      // non nodejs env.\n      task = tasksByHandleId[id];\n      delete tasksByHandleId[id];\n    } else {\n      // nodejs env ?? other environments.\n      task = id?.[taskSymbol];\n      if (task) {\n        id[taskSymbol] = null;\n      } else {\n        task = id;\n      }\n    }\n    if (task?.type) {\n      if (task.cancelFn) {\n        // Do not cancel already canceled functions\n        task.zone.cancelTask(task);\n      }\n    } else {\n      // cause an error by calling it directly.\n      delegate.apply(window, args);\n    }\n  });\n}\nfunction patchCustomElements(_global, api) {\n  const {\n    isBrowser,\n    isMix\n  } = api.getGlobalObjects();\n  if (!isBrowser && !isMix || !_global['customElements'] || !('customElements' in _global)) {\n    return;\n  }\n  // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n  const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback', 'formAssociatedCallback', 'formDisabledCallback', 'formResetCallback', 'formStateRestoreCallback'];\n  api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\nfunction eventTargetPatch(_global, api) {\n  if (Zone[api.symbol('patchEventTarget')]) {\n    // EventTarget is already patched.\n    return;\n  }\n  const {\n    eventNames,\n    zoneSymbolEventNames,\n    TRUE_STR,\n    FALSE_STR,\n    ZONE_SYMBOL_PREFIX\n  } = api.getGlobalObjects();\n  //  predefine all __zone_symbol__ + eventName + true/false string\n  for (let i = 0; i < eventNames.length; i++) {\n    const eventName = eventNames[i];\n    const falseEventName = eventName + FALSE_STR;\n    const trueEventName = eventName + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n  }\n  const EVENT_TARGET = _global['EventTarget'];\n  if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n    return;\n  }\n  api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n  return true;\n}\nfunction patchEvent(global, api) {\n  api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n  if (!ignoreProperties || ignoreProperties.length === 0) {\n    return onProperties;\n  }\n  const tip = ignoreProperties.filter(ip => ip.target === target);\n  if (tip.length === 0) {\n    return onProperties;\n  }\n  const targetIgnoreProperties = tip[0].ignoreProperties;\n  return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n  // check whether target is available, sometimes target will be undefined\n  // because different browser or some 3rd party plugin.\n  if (!target) {\n    return;\n  }\n  const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n  patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n  return Object.getOwnPropertyNames(target).filter(name => name.startsWith('on') && name.length > 2).map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n  if (isNode && !isMix) {\n    return;\n  }\n  if (Zone[api.symbol('patchEvents')]) {\n    // events are already been patched by legacy patch.\n    return;\n  }\n  const ignoreProperties = _global['__Zone_ignore_on_properties'];\n  // for browsers that we can patch the descriptor:  Chrome & Firefox\n  let patchTargets = [];\n  if (isBrowser) {\n    const internalWindow = window;\n    patchTargets = patchTargets.concat(['Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement', 'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker']);\n    const ignoreErrorProperties = [];\n    // In older browsers like IE or Edge, event handler properties (e.g., `onclick`)\n    // may not be defined directly on the `window` object but on its prototype (`WindowPrototype`).\n    // To ensure complete coverage, we use the prototype when checking\n    // for and patching these properties.\n    patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n  }\n  patchTargets = patchTargets.concat(['XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest', 'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket']);\n  for (let i = 0; i < patchTargets.length; i++) {\n    const target = _global[patchTargets[i]];\n    target?.prototype && patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n  }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n  Zone.__load_patch('legacy', global => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n      legacyPatch();\n    }\n  });\n  Zone.__load_patch('timers', global => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n  });\n  Zone.__load_patch('requestAnimationFrame', global => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n  });\n  Zone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n      const name = blockingMethods[i];\n      patchMethod(global, name, (delegate, symbol, name) => {\n        return function (s, args) {\n          return Zone.current.run(delegate, global, args, name);\n        };\n      });\n    }\n  });\n  Zone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n      api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n  });\n  Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n  });\n  Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n  });\n  Zone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n  });\n  Zone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n  });\n  Zone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n  });\n  Zone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n      const XMLHttpRequest = window['XMLHttpRequest'];\n      if (!XMLHttpRequest) {\n        // XMLHttpRequest is not available in service worker\n        return;\n      }\n      const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n      function findPendingTask(target) {\n        return target[XHR_TASK];\n      }\n      let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n      let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n      if (!oriAddListener) {\n        const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n          const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n          oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n      }\n      const READY_STATE_CHANGE = 'readystatechange';\n      const SCHEDULED = 'scheduled';\n      function scheduleTask(task) {\n        const data = task.data;\n        const target = data.target;\n        target[XHR_SCHEDULED] = false;\n        target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n        // remove existing event listener\n        const listener = target[XHR_LISTENER];\n        if (!oriAddListener) {\n          oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n          oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        }\n        if (listener) {\n          oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n        }\n        const newListener = target[XHR_LISTENER] = () => {\n          if (target.readyState === target.DONE) {\n            // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n            // readyState=4 multiple times, so we need to check task state here\n            if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n              // check whether the xhr has registered onload listener\n              // if that is the case, the task should invoke after all\n              // onload listeners finish.\n              // Also if the request failed without response (status = 0), the load event handler\n              // will not be triggered, in that case, we should also invoke the placeholder callback\n              // to close the XMLHttpRequest::send macroTask.\n              // https://github.com/angular/angular/issues/38795\n              const loadTasks = target[Zone.__symbol__('loadfalse')];\n              if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                const oriInvoke = task.invoke;\n                task.invoke = function () {\n                  // need to load the tasks again, because in other\n                  // load listener, they may remove themselves\n                  const loadTasks = target[Zone.__symbol__('loadfalse')];\n                  for (let i = 0; i < loadTasks.length; i++) {\n                    if (loadTasks[i] === task) {\n                      loadTasks.splice(i, 1);\n                    }\n                  }\n                  if (!data.aborted && task.state === SCHEDULED) {\n                    oriInvoke.call(task);\n                  }\n                };\n                loadTasks.push(task);\n              } else {\n                task.invoke();\n              }\n            } else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n              // error occurs when xhr.send()\n              target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n            }\n          }\n        };\n        oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n        const storedTask = target[XHR_TASK];\n        if (!storedTask) {\n          target[XHR_TASK] = task;\n        }\n        sendNative.apply(target, data.args);\n        target[XHR_SCHEDULED] = true;\n        return task;\n      }\n      function placeholderCallback() {}\n      function clearTask(task) {\n        const data = task.data;\n        // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n        // to prevent it from firing. So instead, we store info for the event listener.\n        data.aborted = true;\n        return abortNative.apply(data.target, data.args);\n      }\n      const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n        self[XHR_SYNC] = args[2] == false;\n        self[XHR_URL] = args[1];\n        return openNative.apply(self, args);\n      });\n      const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n      const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n      const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n      const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n        if (Zone.current[fetchTaskScheduling] === true) {\n          // a fetch is scheduling, so we are using xhr to polyfill fetch\n          // and because we already schedule macroTask for fetch, we should\n          // not schedule a macroTask for xhr again\n          return sendNative.apply(self, args);\n        }\n        if (self[XHR_SYNC]) {\n          // if the XHR is sync there is no task to schedule, just execute the code.\n          return sendNative.apply(self, args);\n        } else {\n          const options = {\n            target: self,\n            url: self[XHR_URL],\n            isPeriodic: false,\n            args: args,\n            aborted: false\n          };\n          const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n          if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted && task.state === SCHEDULED) {\n            // xhr request throw error when send\n            // we should invoke task instead of leaving a scheduled\n            // pending macroTask\n            task.invoke();\n          }\n        }\n      });\n      const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n        const task = findPendingTask(self);\n        if (task && typeof task.type == 'string') {\n          // If the XHR has already completed, do nothing.\n          // If the XHR has already been aborted, do nothing.\n          // Fix #569, call abort multiple times before done will cause\n          // macroTask task count be negative number\n          if (task.cancelFn == null || task.data && task.data.aborted) {\n            return;\n          }\n          task.zone.cancelTask(task);\n        } else if (Zone.current[fetchTaskAborting] === true) {\n          // the abort is called from fetch polyfill, we need to call native abort of XHR.\n          return abortNative.apply(self, args);\n        }\n        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n        // task\n        // to cancel. Do nothing.\n      });\n    }\n  });\n  Zone.__load_patch('geolocation', global => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n      patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n  });\n  Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n      return function (e) {\n        const eventTasks = findEventTasks(global, evtName);\n        eventTasks.forEach(eventTask => {\n          // windows has added unhandledrejection event listener\n          // trigger the event listener\n          const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n          if (PromiseRejectionEvent) {\n            const evt = new PromiseRejectionEvent(evtName, {\n              promise: e.promise,\n              reason: e.rejection\n            });\n            eventTask.invoke(evt);\n          }\n        });\n      };\n    }\n    if (global['PromiseRejectionEvent']) {\n      Zone[zoneSymbol('unhandledPromiseRejectionHandler')] = findPromiseRejectionHandler('unhandledrejection');\n      Zone[zoneSymbol('rejectionHandledHandler')] = findPromiseRejectionHandler('rejectionhandled');\n    }\n  });\n  Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    patchQueueMicrotask(global, api);\n  });\n}\nfunction patchPromise(Zone) {\n  Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n      if (obj && obj.toString === Object.prototype.toString) {\n        const className = obj.constructor && obj.constructor.name;\n        return (className ? className : '') + ': ' + JSON.stringify(obj);\n      }\n      return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = e => {\n      if (api.showUncaughtError()) {\n        const rejection = e && e.rejection;\n        if (rejection) {\n          console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n        } else {\n          console.error(e);\n        }\n      }\n    };\n    api.microtaskDrainDone = () => {\n      while (_uncaughtPromiseErrors.length) {\n        const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n        try {\n          uncaughtPromiseError.zone.runGuarded(() => {\n            if (uncaughtPromiseError.throwOriginal) {\n              throw uncaughtPromiseError.rejection;\n            }\n            throw uncaughtPromiseError;\n          });\n        } catch (error) {\n          handleUnhandledRejection(error);\n        }\n      }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n      api.onUnhandledError(e);\n      try {\n        const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n        if (typeof handler === 'function') {\n          handler.call(this, e);\n        }\n      } catch (err) {}\n    }\n    function isThenable(value) {\n      return value && typeof value.then === 'function';\n    }\n    function forwardResolution(value) {\n      return value;\n    }\n    function forwardRejection(rejection) {\n      return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n      return v => {\n        try {\n          resolvePromise(promise, state, v);\n        } catch (err) {\n          resolvePromise(promise, false, err);\n        }\n        // Do not return value or you will break the Promise spec.\n      };\n    }\n    const once = function () {\n      let wasCalled = false;\n      return function wrapper(wrappedFunction) {\n        return function () {\n          if (wasCalled) {\n            return;\n          }\n          wasCalled = true;\n          wrappedFunction.apply(null, arguments);\n        };\n      };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n      const onceWrapper = once();\n      if (promise === value) {\n        throw new TypeError(TYPE_ERROR);\n      }\n      if (promise[symbolState] === UNRESOLVED) {\n        // should only get value.then once based on promise spec.\n        let then = null;\n        try {\n          if (typeof value === 'object' || typeof value === 'function') {\n            then = value && value.then;\n          }\n        } catch (err) {\n          onceWrapper(() => {\n            resolvePromise(promise, false, err);\n          })();\n          return promise;\n        }\n        // if (value instanceof ZoneAwarePromise) {\n        if (state !== REJECTED && value instanceof ZoneAwarePromise && value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) && value[symbolState] !== UNRESOLVED) {\n          clearRejectedNoCatch(value);\n          resolvePromise(promise, value[symbolState], value[symbolValue]);\n        } else if (state !== REJECTED && typeof then === 'function') {\n          try {\n            then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n          } catch (err) {\n            onceWrapper(() => {\n              resolvePromise(promise, false, err);\n            })();\n          }\n        } else {\n          promise[symbolState] = state;\n          const queue = promise[symbolValue];\n          promise[symbolValue] = value;\n          if (promise[symbolFinally] === symbolFinally) {\n            // the promise is generated by Promise.prototype.finally\n            if (state === RESOLVED) {\n              // the state is resolved, should ignore the value\n              // and use parent promise value\n              promise[symbolState] = promise[symbolParentPromiseState];\n              promise[symbolValue] = promise[symbolParentPromiseValue];\n            }\n          }\n          // record task information in value when error occurs, so we can\n          // do some additional work such as render longStackTrace\n          if (state === REJECTED && value instanceof Error) {\n            // check if longStackTraceZone is here\n            const trace = Zone.currentTask && Zone.currentTask.data && Zone.currentTask.data[creationTrace];\n            if (trace) {\n              // only keep the long stack trace into error when in longStackTraceZone\n              ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: trace\n              });\n            }\n          }\n          for (let i = 0; i < queue.length;) {\n            scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n          }\n          if (queue.length == 0 && state == REJECTED) {\n            promise[symbolState] = REJECTED_NO_CATCH;\n            let uncaughtPromiseError = value;\n            try {\n              // Here we throws a new Error to print more readable error log\n              // and if the value is not an error, zone.js builds an `Error`\n              // Object here to attach the stack information.\n              throw new Error('Uncaught (in promise): ' + readableObjectToString(value) + (value && value.stack ? '\\n' + value.stack : ''));\n            } catch (err) {\n              uncaughtPromiseError = err;\n            }\n            if (isDisableWrappingUncaughtPromiseRejection) {\n              // If disable wrapping uncaught promise reject\n              // use the value instead of wrapping it.\n              uncaughtPromiseError.throwOriginal = true;\n            }\n            uncaughtPromiseError.rejection = value;\n            uncaughtPromiseError.promise = promise;\n            uncaughtPromiseError.zone = Zone.current;\n            uncaughtPromiseError.task = Zone.currentTask;\n            _uncaughtPromiseErrors.push(uncaughtPromiseError);\n            api.scheduleMicroTask(); // to make sure that it is running\n          }\n        }\n      }\n      // Resolving an already resolved promise is a noop.\n      return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n      if (promise[symbolState] === REJECTED_NO_CATCH) {\n        // if the promise is rejected no catch status\n        // and queue.length > 0, means there is a error handler\n        // here to handle the rejected promise, we should trigger\n        // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n        // eventHandler\n        try {\n          const handler = Zone[REJECTION_HANDLED_HANDLER];\n          if (handler && typeof handler === 'function') {\n            handler.call(this, {\n              rejection: promise[symbolValue],\n              promise: promise\n            });\n          }\n        } catch (err) {}\n        promise[symbolState] = REJECTED;\n        for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n          if (promise === _uncaughtPromiseErrors[i].promise) {\n            _uncaughtPromiseErrors.splice(i, 1);\n          }\n        }\n      }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n      clearRejectedNoCatch(promise);\n      const promiseState = promise[symbolState];\n      const delegate = promiseState ? typeof onFulfilled === 'function' ? onFulfilled : forwardResolution : typeof onRejected === 'function' ? onRejected : forwardRejection;\n      zone.scheduleMicroTask(source, () => {\n        try {\n          const parentPromiseValue = promise[symbolValue];\n          const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n          if (isFinallyPromise) {\n            // if the promise is generated from finally call, keep parent promise's state and value\n            chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n            chainPromise[symbolParentPromiseState] = promiseState;\n          }\n          // should not pass value to finally callback\n          const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ? [] : [parentPromiseValue]);\n          resolvePromise(chainPromise, true, value);\n        } catch (error) {\n          // if error occurs, should always return this error\n          resolvePromise(chainPromise, false, error);\n        }\n      }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () {};\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n      static toString() {\n        return ZONE_AWARE_PROMISE_TO_STRING;\n      }\n      static resolve(value) {\n        if (value instanceof ZoneAwarePromise) {\n          return value;\n        }\n        return resolvePromise(new this(null), RESOLVED, value);\n      }\n      static reject(error) {\n        return resolvePromise(new this(null), REJECTED, error);\n      }\n      static withResolvers() {\n        const result = {};\n        result.promise = new ZoneAwarePromise((res, rej) => {\n          result.resolve = res;\n          result.reject = rej;\n        });\n        return result;\n      }\n      static any(values) {\n        if (!values || typeof values[Symbol.iterator] !== 'function') {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n        const promises = [];\n        let count = 0;\n        try {\n          for (let v of values) {\n            count++;\n            promises.push(ZoneAwarePromise.resolve(v));\n          }\n        } catch (err) {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n        if (count === 0) {\n          return Promise.reject(new AggregateError([], 'All promises were rejected'));\n        }\n        let finished = false;\n        const errors = [];\n        return new ZoneAwarePromise((resolve, reject) => {\n          for (let i = 0; i < promises.length; i++) {\n            promises[i].then(v => {\n              if (finished) {\n                return;\n              }\n              finished = true;\n              resolve(v);\n            }, err => {\n              errors.push(err);\n              count--;\n              if (count === 0) {\n                finished = true;\n                reject(new AggregateError(errors, 'All promises were rejected'));\n              }\n            });\n          }\n        });\n      }\n      static race(values) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n        function onResolve(value) {\n          resolve(value);\n        }\n        function onReject(error) {\n          reject(error);\n        }\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n          value.then(onResolve, onReject);\n        }\n        return promise;\n      }\n      static all(values) {\n        return ZoneAwarePromise.allWithCallback(values);\n      }\n      static allSettled(values) {\n        const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n        return P.allWithCallback(values, {\n          thenCallback: value => ({\n            status: 'fulfilled',\n            value\n          }),\n          errorCallback: err => ({\n            status: 'rejected',\n            reason: err\n          })\n        });\n      }\n      static allWithCallback(values, callback) {\n        let resolve;\n        let reject;\n        let promise = new this((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n        // Start at 2 to prevent prematurely resolving if .then is called immediately.\n        let unresolvedCount = 2;\n        let valueIndex = 0;\n        const resolvedValues = [];\n        for (let value of values) {\n          if (!isThenable(value)) {\n            value = this.resolve(value);\n          }\n          const curValueIndex = valueIndex;\n          try {\n            value.then(value => {\n              resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n              unresolvedCount--;\n              if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n              }\n            }, err => {\n              if (!callback) {\n                reject(err);\n              } else {\n                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                unresolvedCount--;\n                if (unresolvedCount === 0) {\n                  resolve(resolvedValues);\n                }\n              }\n            });\n          } catch (thenErr) {\n            reject(thenErr);\n          }\n          unresolvedCount++;\n          valueIndex++;\n        }\n        // Make the unresolvedCount zero-based again.\n        unresolvedCount -= 2;\n        if (unresolvedCount === 0) {\n          resolve(resolvedValues);\n        }\n        return promise;\n      }\n      constructor(executor) {\n        const promise = this;\n        if (!(promise instanceof ZoneAwarePromise)) {\n          throw new Error('Must be an instanceof Promise.');\n        }\n        promise[symbolState] = UNRESOLVED;\n        promise[symbolValue] = []; // queue;\n        try {\n          const onceWrapper = once();\n          executor && executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n        } catch (error) {\n          resolvePromise(promise, false, error);\n        }\n      }\n      get [Symbol.toStringTag]() {\n        return 'Promise';\n      }\n      get [Symbol.species]() {\n        return ZoneAwarePromise;\n      }\n      then(onFulfilled, onRejected) {\n        // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n        // may be an object without a prototype (created through `Object.create(null)`); thus\n        // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n        // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n        // object and copies promise properties into that object (within the `getOrCreateLoad`\n        // function). The zone.js then checks if the resolved value has the `then` method and\n        // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n        // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n        let C = this.constructor?.[Symbol.species];\n        if (!C || typeof C !== 'function') {\n          C = this.constructor || ZoneAwarePromise;\n        }\n        const chainPromise = new C(noop);\n        const zone = Zone.current;\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n        }\n        return chainPromise;\n      }\n      catch(onRejected) {\n        return this.then(null, onRejected);\n      }\n      finally(onFinally) {\n        // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n        let C = this.constructor?.[Symbol.species];\n        if (!C || typeof C !== 'function') {\n          C = ZoneAwarePromise;\n        }\n        const chainPromise = new C(noop);\n        chainPromise[symbolFinally] = symbolFinally;\n        const zone = Zone.current;\n        if (this[symbolState] == UNRESOLVED) {\n          this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n        } else {\n          scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n        }\n        return chainPromise;\n      }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n      const proto = Ctor.prototype;\n      const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n      if (prop && (prop.writable === false || !prop.configurable)) {\n        // check Ctor.prototype.then propertyDescriptor is writable or not\n        // in meteor env, writable is false, we should ignore such case\n        return;\n      }\n      const originalThen = proto.then;\n      // Keep a reference to the original method.\n      proto[symbolThen] = originalThen;\n      Ctor.prototype.then = function (onResolve, onReject) {\n        const wrapped = new ZoneAwarePromise((resolve, reject) => {\n          originalThen.call(this, resolve, reject);\n        });\n        return wrapped.then(onResolve, onReject);\n      };\n      Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n      return function (self, args) {\n        let resultPromise = fn.apply(self, args);\n        if (resultPromise instanceof ZoneAwarePromise) {\n          return resultPromise;\n        }\n        let ctor = resultPromise.constructor;\n        if (!ctor[symbolThenPatched]) {\n          patchThen(ctor);\n        }\n        return resultPromise;\n      };\n    }\n    if (NativePromise) {\n      patchThen(NativePromise);\n      patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n  });\n}\nfunction patchToString(Zone) {\n  // override Function.prototype.toString to make zone.js patched function\n  // look like native function\n  Zone.__load_patch('toString', global => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n      if (typeof this === 'function') {\n        const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n        if (originalDelegate) {\n          if (typeof originalDelegate === 'function') {\n            return originalFunctionToString.call(originalDelegate);\n          } else {\n            return Object.prototype.toString.call(originalDelegate);\n          }\n        }\n        if (this === Promise) {\n          const nativePromise = global[PROMISE_SYMBOL];\n          if (nativePromise) {\n            return originalFunctionToString.call(nativePromise);\n          }\n        }\n        if (this === Error) {\n          const nativeError = global[ERROR_SYMBOL];\n          if (nativeError) {\n            return originalFunctionToString.call(nativeError);\n          }\n        }\n      }\n      return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n      if (typeof Promise === 'function' && this instanceof Promise) {\n        return PROMISE_OBJECT_TO_STRING;\n      }\n      return originalObjectToString.call(this);\n    };\n  });\n}\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n  const symbol = Zone.__symbol__(method);\n  if (target[symbol]) {\n    return;\n  }\n  const nativeDelegate = target[symbol] = target[method];\n  target[method] = function (name, opts, options) {\n    if (opts && opts.prototype) {\n      callbacks.forEach(function (callback) {\n        const source = `${targetName}.${method}::` + callback;\n        const prototype = opts.prototype;\n        // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n        // `customElements.define`. We explicitly wrap the patching code into try-catch since\n        // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n        // make those properties non-writable. This means that patching callback will throw an error\n        // `cannot assign to read-only property`. See this code as an example:\n        // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n        // We don't want to stop the application rendering if we couldn't patch some\n        // callback, e.g. `attributeChangedCallback`.\n        try {\n          if (prototype.hasOwnProperty(callback)) {\n            const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n            if (descriptor && descriptor.value) {\n              descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n              api._redefineProperty(opts.prototype, callback, descriptor);\n            } else if (prototype[callback]) {\n              prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n            }\n          } else if (prototype[callback]) {\n            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n          }\n        } catch {\n          // Note: we leave the catch block empty since there's no way to handle the error related\n          // to non-writable property.\n        }\n      });\n    }\n    return nativeDelegate.call(target, name, opts, options);\n  };\n  api.attachOriginToPatched(target[method], nativeDelegate);\n}\nfunction patchUtil(Zone) {\n  Zone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n    // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n    // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n    // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n    // supported for backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n      global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n      Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] = global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n      globalSources,\n      zoneSymbolEventNames,\n      eventNames,\n      isBrowser,\n      isMix,\n      isNode,\n      TRUE_STR,\n      FALSE_STR,\n      ZONE_SYMBOL_PREFIX,\n      ADD_EVENT_LISTENER_STR,\n      REMOVE_EVENT_LISTENER_STR\n    });\n  });\n}\nfunction patchCommon(Zone) {\n  patchPromise(Zone);\n  patchToString(Zone);\n  patchUtil(Zone);\n}\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);"],"mappings":"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","names":["BLOCK_MARKER$1","findEndOfBlock","cooked","raw","cookedIndex","rawIndex","BLOCK_MARKER$1","$localize","messageParts","expressions","translation","message","stripBlock","i","BLOCK_MARKER","messagePart","rawMessagePart","$localize","global","__symbol__","name","initZone","performance","mark","performanceMeasure","label","ZoneImpl","patches","zone","_currentZoneFrame","_currentTask","fn","ignoreDuplicate","checkDuplicate","perfName","_api","parent","zoneSpec","_ZoneDelegate","key","current","callback","source","_callback","applyThis","applyArgs","error","task","NO_ZONE","zoneTask","type","isPeriodic","isRefreshable","notScheduled","eventTask","macroTask","reEntryGuard","running","scheduled","previousTask","state","unknown","scheduling","zoneDelegates","newZone","err","data","customSchedule","ZoneTask","microTask","customCancel","canceling","count","i","DELEGATE_ZS","delegate","target","hasTaskState","parentDelegate","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleMicroTask","value","isEmpty","counts","prev","next","options","scheduleFn","cancelFn","self","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","toState","fromState1","fromState2","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","nativeThen","queue","noop","loadZone","ObjectGetOwnPropertyDescriptor","ObjectDefineProperty","ObjectGetPrototypeOf","ObjectCreate","ArraySlice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","bindArguments","patchPrototype","prototype","fnNames","prototypeDesc","isPropertyWritable","patched","attachOriginToPatched","propertyDesc","isWebWorker","isNode","isBrowser","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","event","eventNameSymbol","listener","result","errorEvent","patchProperty","obj","prop","desc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","patchOnProperties","properties","onProperties","j","originalInstanceKey","patchClass","className","OriginalClass","a","instance","patchMethod","patchFn","proto","delegateName","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","meta","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","isFunction","isNumber","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","LISTENERS_EVENT_LISTENER","REMOVE_ALL_LISTENERS_EVENT_LISTENER","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","globalCallback","context","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","returnTarget","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","customScheduleGlobal","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","unpatchedEvents","passiveEvents","copyEventListenerOptions","newOptions","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","prepend","isEventListenerObject","signal","capture","once","isExisting","constructorName","targetSource","onAbort","existingTask","onPropertySymbol","listeners","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","patchEventPrototype","Event","patchQueueMicrotask","taskSymbol","patchTimer","window","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","clearTask","handle","handleId","originalRefresh","id","patchCustomElements","callbacks","eventTargetPatch","eventNames","EVENT_TARGET","patchEvent","filterProperties","ignoreProperties","tip","ip","targetIgnoreProperties","op","patchFilteredProperties","filteredProperties","getOnEventNames","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","patchBrowser","Zone","legacyPatch","set","clear","blockingMethods","s","XMLHttpRequestEventTarget","patchXHR","XHR_TASK","XHR_SYNC","XHR_LISTENER","XHR_SCHEDULED","XHR_URL","XHR_ERROR_BEFORE_SCHEDULED","XMLHttpRequest","XMLHttpRequestPrototype","findPendingTask","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","newListener","loadTasks","oriInvoke","sendNative","placeholderCallback","abortNative","openNative","XMLHTTPREQUEST_SOURCE","fetchTaskAborting","fetchTaskScheduling","findPromiseRejectionHandler","e","PromiseRejectionEvent","evt","patchPromise","readableObjectToString","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","rejection","uncaughtPromiseError","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","ZoneAwarePromise","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","then","clearRejectedNoCatch","trace","scheduleResolveOrReject","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","ZONE_AWARE_PROMISE_TO_STRING","AggregateError","res","rej","values","promises","finished","resolve","reject","onResolve","onReject","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","C","onFinally","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","patchCallbacks","targetName","method","nativeDelegate","opts","descriptor","patchUtil","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchCommon","Zone$1"],"x_google_ignoreList":[0,1,2]}